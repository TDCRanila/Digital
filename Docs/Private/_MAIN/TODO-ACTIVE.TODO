
19Sept:
✘ WindowDimension -> WindowInformation @cancelled(20-09-20 17:27)
- Do not agree anymore.
✔ window callbacks @done(20-09-20 17:27)
- Added callbacks that I will be useful in the future. Event hadling needs to be improved
✔ imgui styling @done(20-09-20 17:27)
- Looks nice now :)
✔ uuid research @done(20-09-20 17:30)
- Boost:uuids sounds useful and nice, although it will bloat project dependencies a bit more. Potentially looking for my own solution or something smaller.

20Sept:
✔ boost uuid + DUID class @done(20-09-20 17:27)
- Decided on boost, implementation was nice, tested it on the Testbench and implemented it right away. Should now look at the project again to replace placeholder ids.
✔ Proper Production for github-mirror/gitlab. @done(20-09-20 20:11)

21Sept:
✔ DUID replacement @done(20-09-21 23:24)
✔ Window/Input clean up. @done(20-09-21 23:24)
✔ application act as a system provider, no store of system ptr in other classes(input, window management) @done(20-09-22 01:20)
✔ Proper Production for github-mirror/gitlab #2. @done(20-09-22 02:10)

22Sept:
✔ Window Dimension Improper Initialization. @done(20-09-22 21:03)
✔ Simple Input Reading @done(20-09-23 10:38)
✔ WindowInstance Destruction @done(20-09-23 13:14)

23Sept:
✔ Window Callbacks @done(20-09-23 16:51)
✔ ImGui Layer Cleanup1 @done(20-09-24 01:26)
✔ More Simple Input Reading. @done(20-09-24 01:27)
- Released, Pressed, Held implemented.

27Sept:
✔ ImGui Layer Cleanup2 @done(20-09-28 00:05)
✔ ImGui, get rid of imgui-cmake and fork imgui entirely and add cmake stuff to it. @done(20-09-28 14:47)
☐ ImGui Docking Integration

Unknown:
☐ The Cherno Engine Videos - research
☐ Fix ImGui Extensions
- Look into some other ImGui features that might be interesting, such as docking
☐ Frame Loop Control
☐ Simple Editor
- Implement BaseClasses & Rendering of ImGuiEditorElements: Titlebar, Level Editor/Viewport, Template for Console, Template for (Debug) Logger, Splashscreen?, Template for Input Register(Like Unity), Menu for EditorSystems->BT,Input,Scripter,ContentExplorer, Entity & Component Creators, Project Settings, Editor Settings.
☐ Event System Research
☐ Joy Stick Input Management
☐ Input Event Callbacks & Registration
- https://stackoverflow.com/questions/34154202/simple-event-system-in-c, https://blog.molecular-matters.com/2011/09/19/generic-type-safe-delegates-and-events-in-c/, https://www.gamedev.net/articles/programming/general-and-gameplay-programming/effective-event-handling-in-c-r2459/
☐ complete warning free

☐ core ecs loop
☐ Debugger
☐ Implement Console(~) & Editor Logging
- To file as well, as in editor.

☐ texture rendering
☐ model rendering (voxel/textures/pixel art)
☐ rendering pipeline figured out


